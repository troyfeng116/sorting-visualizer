{"version":3,"sources":["algorithms/mergeSort.ts","algorithms/quickSort.ts","algorithms/heapSort.ts","utility/functions.ts","utility/constants.ts","components/Bar.tsx","components/Plot.tsx","components/Legend.tsx","components/Bundle.tsx","algorithms/bubbleSort.ts","algorithms/insertionSort.ts","algorithms/shuffle.ts","index.tsx"],"names":["mSort","arr","sequence","mSortAux","l","r","m","Math","floor","lIndex","rIndex","push","slice","temp","i","merge","length","qSort","qSortAux","splitter","heapify","index","size","seq","maxIndex","lChild","rChild","makeArray","n","ans","sorted","getAlgoColor","algo","Bar","props","useEffect","data","d3","remove","append","attr","selectAll","enter","d","state","drawChart","Plot","dataset","svg","height","text","xScale","domain","range","width","xAxis","yScale","yAxis","call","Legend","createLegendEntry","h","style","Bundle","numBars","barArray","currentlyRunning","speed","runtimes","parseInt","document","getElementById","value","innerHTML","this","setState","newSpeed","setColor","j","resetLast","setTimeout","reset","color","f","t","quickSort","k","handleSequence","end","bSort","toMove","iSort","last","hSort","random","fisher_yeats","numMoves","newRuntimes","backgroundColor","handleSequenceLoop","cur","upTo","swap","setOneBar","setActive","newArr","menuBar","id","onClick","applyAlgorithm","otherButtons","handleStop","sliderContainer","type","min","max","defaultValue","name","onInput","handleNumBarsChange","htmlFor","step","handleSpeedChange","bars","graph","legend","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c5905bf1.chunk.js","sourcesContent":["export function mSort(arr:number[][]) {\n\tvar sequence:any[][] = [];\n\tmSortAux(arr,0,arr.length-1,sequence);\n\treturn sequence;\n}\nfunction mSortAux(arr:number[][],l:number,r:number,sequence:any[][]) {\n\tif (l >= r) return;\n\tvar m = Math.floor((l+r)/2);\n\tmSortAux(arr,l,m,sequence);\n\tmSortAux(arr,m+1,r,sequence);\n\tmerge(arr,l,r,sequence);\n}\nfunction merge(arr:number[][],l:number,r:number,sequence:any[][]) {\n\tvar m = Math.floor((l+r)/2);\n\tvar lIndex = l;\n\tvar rIndex = m+1;\n\twhile (lIndex <= m && rIndex <= r) {\n\t\tif (arr[lIndex][0] <= arr[rIndex][0]) {\n\t\t\tlIndex++;\n\t\t\tsequence.push([arr.slice(),l,r,lIndex,rIndex]);\n\t\t}\n\t\telse {\n\t\t\tvar temp = arr[rIndex];\n\t\t\tvar i = rIndex;\n\t\t\twhile (i !== lIndex) {\n\t\t\t\tarr[i] = arr[i-1];\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tarr[lIndex] = temp;\n\t\t\tlIndex++;\n\t\t\tm++;\n\t\t\trIndex++;\n\t\t\tif (rIndex <= r) sequence.push([arr.slice(),l,r,lIndex,rIndex]);\n\t\t\telse sequence.push([arr.slice(),l,r,lIndex,rIndex-1]);\n\t\t}\n\t}\n}","export function qSort(arr:number[][]) {\n\tvar sequence:number[][] = [];\n\tqSortAux(arr,0,arr.length-1,sequence);\n\treturn sequence;\n}\nfunction qSortAux(arr:number[][], l:number, r:number, sequence:number[][]) {\n\tif (l >= r) return;\n\tvar splitter = arr[r];\n\tvar m = l;\n\tfor (let i = l; i < r; i++) {\n\t\tif (arr[i][0] < splitter[0]) {\n\t\t\tlet temp = arr[i];\n\t\t\tarr[i] = arr[m];\n\t\t\tarr[m] = temp;\n\t\t\tsequence.push([i,m,l,r]);\n\t\t\tm++;\n\t\t}\n\t}\n\tarr[r] = arr[m];\n\tarr[m] = splitter;\n\tsequence.push([m,r,l,r]);\n\tqSortAux(arr,l,m-1,sequence);\n\tqSortAux(arr,m+1,r,sequence);\n}","export function hSort(arr:number[][]) {\n\tvar sequence: number[][] = [];\n\tvar size = arr.length;\n\tfor (let i = size-1; i >= 0; i--) {\n\t\theapify(arr,i,size,sequence);\n\t}\n\tfor (let last = size-1; last > 0; last--) {\n\t\tvar temp = arr[0];\n\t\tarr[0] = arr[last];\n\t\tarr[last] = temp;\n\t\tsequence.push([0,last,last]);\n\t\theapify(arr,0,last,sequence);\n\t}\n\treturn sequence;\n}\nfunction heapify(arr:number[][],index:number,size:number,seq:number[][]) {\n\tvar maxIndex = index;\n\tvar lChild = 2*index+1;\n\tvar rChild = 2*index+2;\n\tif (lChild < size && arr[lChild][0] > arr[maxIndex][0]) maxIndex = lChild;\n\tif (rChild < size && arr[rChild][0] > arr[maxIndex][0]) maxIndex = rChild;\n\tif (maxIndex !== index) {\n\t\tvar temp = arr[index];\n\t\tarr[index] = arr[maxIndex];\n\t\tarr[maxIndex] = temp;\n\t\tseq.push([index,maxIndex]);\n\t\theapify(arr,maxIndex,size,seq);\n\t}\n}","import { NORMAL, ACTIVE, COMPARE, PIVOT } from './constants';\n\nexport function makeArray(n:number) {\n\tvar ans:number[][] = [];\n\tfor (let i = 1; i <= n; i++) ans.push([i,NORMAL]);\n\treturn ans;\n}\nexport function getColor(state:number) {\n\treturn state===NORMAL?\n\t\t\"rgb(60,60,120)\" : state===ACTIVE?\n\t\t\t\"rgb(100,100,255)\" : state===COMPARE?\n\t\t\t\t\"red\" : state===PIVOT?\n\t\t\t\t\t\"blue\" : \"rgb(80,210,80)\";\n}\nexport function sorted(arr:number[][]) {\n\tfor (let i = 0; i < arr.length-1; i++) {\n\t\tif (arr[i][0] > arr[i+1][0]) return false;\n\t}\n\treturn true;\n}\n\nexport function getAlgoColor(algo:string) {\n\tswitch (algo) {\n\t\tcase 'bSort': return \"rgb(255,0,0)\";\n\t\tcase 'iSort': return \"rgb(0,220,0)\";\n\t\tcase 'hSort': return \"rgb(0,150,255)\";\n\t\tcase 'qSort': return \"rgb(255,120,0)\";\n\t\tcase 'mSort': return \"rgb(220,0,220)\";\n\t\tcase 'shuffle': return \"rgb(15,15,15)\";\n\t}\n\treturn \"black\";\n}","export const NORMAL = 0;\nexport const ACTIVE = 1;\nexport const COMPARE = 2;\nexport const PIVOT = 3;\nexport const SORTED = 4;\nexport const DELAY = 100;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getColor } from './../utility/functions';\n\nfunction Bar(props: {data:any[][]}) {\n    useEffect(() => drawChart());\n    function drawChart() {\n    \tconst data = props.data;\n    \td3.select(\"#barContainer\").remove();\n    \tconst svg = d3.select(\"Body\").append(\"svg\").attr(\"width\", \"50%\").attr(\"height\", \"60%\").attr(\"id\",\"barContainer\");\n    \tsvg.selectAll(\"rect\")\n  \t\t\t.data(data)\n  \t\t\t.enter()\n  \t\t\t.append(\"rect\")\n  \t\t\t.attr(\"x\", (d, i) => (i*100/data.length)+\"%\")\n  \t\t\t.attr(\"y\", (d, i) => (100 - 100/data.length*d[0])+\"%\")\n  \t\t\t.attr(\"width\", (55/data.length)+\"%\")\n  \t\t\t.attr(\"height\", (d, i) => 100/data.length*d[0]+\"%\")\n  \t\t\t.attr(\"fill\", (d, i) => getColor(d[1]));\n    }\n    return <div></div>;\n}\n\nexport { Bar };","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getAlgoColor } from './../utility/functions'\n\nconst Plot = (props: {data: any[][]}) => {\n\tuseEffect(() => drawChart());\n\tfunction drawChart() {\n\t\tconst dataset = props.data;\n\t\td3.select(\"#chart\").remove();\n\t\tconst numPoints = 130;\n\t\tconst maxRuntime = 5000;\n\t\tconst height = 400;\n\t\tconst width = 400;\n\t\tvar svg = d3.select(\"body\").append(\"svg\").attr(\"width\",width).attr(\"height\",height).attr(\"id\",\"chart\");\n\t\tsvg.selectAll(\"circle\")\n\t\t\t.data(dataset)\n\t\t\t.enter()\n\t\t\t.append(\"svg:circle\")\n\t\t\t.attr(\"cx\", (d) => (d[0]/numPoints*(width-100)))\n\t\t\t.attr(\"transform\", \"translate(50,\"+(height+10)+\")\")\n\t\t\t.attr(\"cy\", (d) => (height*.8- d[1]/maxRuntime*(height*.8)))\n\t\t\t.attr(\"transform\", \"translate(50,10)\")\n\t\t\t.attr(\"r\", 4)\n\t\t\t.attr(\"fill\", (d) => getAlgoColor(d[2]))\n\t\t\t.append(\"svg:title\")\n   \t\t\t\t.text((d) => d[2] + \": (\" + d[0] + \",\" + d[1] + \")\");\n   \t\t/* Axes */\n\t\tvar xScale = d3.scaleLinear()\n\t\t\t.domain([0,numPoints])\n\t\t\t.range([0, width-100]);\n\t\tvar xAxis = d3.axisBottom(xScale);\n\t\tvar yScale = d3.scaleLinear()\n\t\t\t.domain([0,maxRuntime])\n\t\t\t.range([height*.8,0]);\n\t\tvar yAxis = d3.axisLeft(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(50,10)\")\n\t\t\t.call(yAxis);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(50,\"+(height*.8+10)+\")\")\n\t\t\t.call(xAxis);\n\t\tsvg.append(\"text\")\n\t\t\t.attr(\"class\", \"x label\")\n\t\t\t.attr(\"text-anchor\", \"end\")\n    \t\t.attr(\"x\", width)\n    \t\t.attr(\"y\",height-10)\n    \t\t.text(\"# bars\");\n    \tsvg.append(\"text\")\n    \t\t.attr(\"class\", \"y label\")\n\t\t\t.attr(\"text-anchor\", \"end\")\n\t\t\t.attr(\"y\",10)\n    \t\t.attr(\"transform\", \"rotate(-90)\")\n    \t\t.text(\"# compares\");\n\t}\n\treturn <div></div>;\n};\n\nexport { Plot };\n","import React from 'react';\nimport * as d3 from 'd3';\nimport { getAlgoColor } from './../utility/functions';\n\nconst Legend = () => {\n\td3.select(\"#legend\").remove();\n\tconst svg = d3.select(\"body\").append(\"svg\").attr(\"width\", 100).attr(\"height\",120).attr(\"id\",\"legend\");\n\tcreateLegendEntry(svg, 10, 'bSort');\n\tcreateLegendEntry(svg, 30, 'iSort');\n\tcreateLegendEntry(svg, 50, 'hSort');\n\tcreateLegendEntry(svg, 70, 'qSort');\n\tcreateLegendEntry(svg, 90, 'mSort');\n\tcreateLegendEntry(svg, 110, 'shuffle');\n\treturn <div></div>;\n}\n\nfunction createLegendEntry(svg:d3.Selection<SVGSVGElement,unknown,HTMLElement,any>, h:number, algo:string) {\n\tsvg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",h).attr(\"r\", 6).style(\"fill\", getAlgoColor(algo));\n\tsvg.append(\"text\").attr(\"x\", 20).attr(\"y\", h).text(algo).attr(\"alignment-baseline\",\"middle\");\n}\n\nexport { Legend };","import React from 'react';\n\n/* -------- ALGORITHMS -------- */\nimport { mSort } from './../algorithms/mergeSort';\nimport { qSort } from './../algorithms/quickSort';\nimport { bSort } from './../algorithms/bubbleSort';\nimport { iSort } from './../algorithms/insertionSort';\nimport { hSort } from './../algorithms/heapSort';\nimport { fisher_yeats } from './../algorithms/shuffle';\n\n/* -------- CONSTANTS & UTILITIES -------- */\nimport { NORMAL, ACTIVE, COMPARE, PIVOT, SORTED, DELAY } from './../utility/constants';\nimport { makeArray, sorted, getAlgoColor } from './../utility/functions';\n\n/* -------- COMPONENTS -------- */\nimport { Bar } from './Bar';\nimport { Plot } from './Plot';\nimport { Legend } from './Legend';\n\ntype BundleState = {\n\tnumBars:number,\n\tbarArray:number[][],\n\tcurrentlyRunning:boolean,\n\tspeed:number,\n\truntimes:any[]\n}\n\nclass Bundle extends React.Component {\n\tpublic state:BundleState = {\n\t\tnumBars: 50,\n\t\tbarArray: makeArray(50),\n\t\tcurrentlyRunning: false,\n\t\tspeed: 100,\n\t\truntimes: []\n\t}\n\thandleNumBarsChange() {\n\t\tvar n:number = parseInt((document.getElementById('barSlider') as HTMLInputElement).value);\n\t\t(document.getElementById(\"barSliderDisplay\") as HTMLLabelElement).innerHTML = \"# BARS: \"+n;\n\t\tthis.setState({\n\t\t\tnumBars: n,\n\t\t\tbarArray: makeArray(n),\n\t\t\tcurrentlyRunning: false,\n\t\t});\n\t}\n\thandleSpeedChange() {\n\t\tvar newSpeed = parseInt((document.getElementById(\"speedSlider\") as HTMLInputElement).value);\n\t\t(document.getElementById(\"speedSliderDisplay\") as HTMLLabelElement).innerHTML = \"SPEED: \"+(newSpeed/1000)+\"s\";\n\t\tthis.setState({speed: newSpeed});\n\t}\n\thandleStop() {\n\t\tthis.setState({currentlyRunning: false,});\n\t\tthis.setColor(NORMAL);\n\t}\n\treset(i:number) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tif (i >= arr.length) return;\n\t\tarr[i][1] = NORMAL;\n\t\tthis.setState({barArray: arr});\n\t}\n\tswap(i:number,j:number,resetLast:boolean) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tvar temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\tarr[i][1] = COMPARE;\n\t\tarr[j][1] = COMPARE;\n\t\tthis.setState({barArray: arr});\n\t\tif (resetLast) setTimeout(()=>{this.reset(i); this.reset(j)}, this.state.speed);\n\t\telse if (i !== j) setTimeout(()=>{this.reset(i)}, this.state.speed);\n\t}\n\tsetOneBar(index:number,color:number) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tarr[index][1] = color;\n\t\tthis.setState({barArray: arr});\n\t}\n\tsetColor(color:number) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tarr[i][1] = color;\n\t\t}\n\t\tthis.setState({barArray: arr});\n\t}\n\tsetActive(f:number,t:number,quickSort:boolean) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tfor (let k = 0; k < arr.length; k++) arr[k][1] = NORMAL;\n\t\tfor (let k = f; k <= t; k++) {\n\t\t\tarr[k][1] = ACTIVE;\n\t\t}\n\t\tif (quickSort) arr[t][1] = PIVOT;\n\t\tthis.setState({barArray:arr});\n\t}\n\tapplyAlgorithm(algo: string) {\n\t\tif (this.state.currentlyRunning) return;\n\t\tvar arr = this.state.barArray.slice();\n\t\tif (algo === 'instantShuffle' || algo === 'shuffle') {\n\t\t\tthis.setColor(NORMAL);\n\t\t\tvar seq = fisher_yeats(arr);\n\t\t\tif (algo === 'shuffle') this.handleSequence(seq, 'shuffle');\n\t\t\telse this.setState({barArray:arr});\n\t\t\treturn;\n\t\t}\n\t\tif (sorted(arr)) {\n\t\t\tthis.setColor(SORTED);\n\t\t\treturn;\n\t\t}\n\t\tswitch(algo) {\n\t\t\tcase 'bSort': this.handleSequence(bSort(arr), algo); break;\n\t\t\tcase 'iSort': this.handleSequence(iSort(arr), algo); break;\n\t\t\tcase 'hSort': this.handleSequence(hSort(arr), algo); break;\n\t\t\tcase 'qSort': this.handleSequence(qSort(arr), algo); break;\n\t\t\tcase 'mSort': this.handleSequence(mSort(arr), algo); break;\n\t\t}\n\t}\n\thandleSequence(seq:number[][], algo:string) {\n\t\tvar numMoves = seq.length;\n\t\tvar newRuntimes = this.state.runtimes.slice();\n\t\tnewRuntimes.push([this.state.numBars, numMoves, algo]);\n\t\tthis.setState({runtimes: newRuntimes});\n\t\t(document.getElementById(algo) as HTMLDivElement).style.backgroundColor = getAlgoColor(algo);\n\t\t(document.getElementById(algo) as HTMLDivElement).style.color = \"white\";\n\t\tthis.setState({currentlyRunning: true});\n\t\tsetTimeout(()=>this.handleSequenceLoop(0,numMoves,seq,algo),DELAY);\n\t}\n\thandleSequenceLoop(cur:number,upTo:number,seq:any[][],algo:string) {\n\t\tif (!this.state.currentlyRunning) {\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.backgroundColor = \"\";\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.color = \"\";\n\t\t\treturn;\n\t\t}\n\t\tif (cur >= upTo) {\n\t\t\tthis.setState({currentlyRunning: false});\n\t\t\tif (sorted(this.state.barArray)) setTimeout(()=>this.setColor(SORTED), this.state.speed);\n\t\t\telse setTimeout(()=>this.setColor(NORMAL), this.state.speed);\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.backgroundColor = \"\";\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.color = \"\";\n\t\t\treturn;\n\t\t}\n\t\tif (seq[cur].length === 2) {\n\t\t\tthis.swap(seq[cur][0] as number, seq[cur][1] as number, true);\n\t\t}\n\t\telse if (seq[cur].length === 3) {\n\t\t\tthis.swap(seq[cur][0] as number, seq[cur][1] as number, false);\n\t\t\tthis.setOneBar(seq[cur][2] as number,SORTED);\n\t\t}\n\t\telse if (seq[cur].length === 4) {\n\t\t\tthis.setActive(seq[cur][2] as number,seq[cur][3] as number, true);\n\t\t\tthis.swap(seq[cur][0] as number, seq[cur][1] as number, true);\n\t\t}\n\t\telse if (seq[cur].length === 5) {\n\t\t\tthis.setActive(seq[cur][1] as number, seq[cur][2] as number, false);\n\t\t\tvar newArr = seq[cur][0];\n\t\t\tnewArr[seq[cur][3]][1] = COMPARE;\n\t\t\tnewArr[seq[cur][4]][1] = COMPARE;\n\t\t\tthis.setState({barArray: newArr});\n\t\t}\n\t\tsetTimeout(()=>this.handleSequenceLoop(cur+1,upTo,seq,algo), this.state.speed);\n\t}\n\trender() {\n\t\tconst menuBar = (\n\t\t\t<ul id=\"menuBar\">\n\t\t\t\t<li><div id='bSort' onClick={()=>this.applyAlgorithm('bSort')}>Bubble Sort</div></li>\n\t\t\t\t<li><div id='iSort' onClick={()=>this.applyAlgorithm('iSort')}>Insertion Sort</div></li>\n\t\t\t\t<li><div id='hSort' onClick={()=>this.applyAlgorithm('hSort')}>Heap Sort</div></li>\n\t\t\t\t<li><div id='qSort' onClick={()=>this.applyAlgorithm('qSort')}>Quick Sort</div></li>\n\t\t\t\t<li><div id='mSort' onClick={()=>this.applyAlgorithm('mSort')}>Merge Sort</div></li>\n\t\t\t</ul>\n\t\t);\n\t\tconst otherButtons = (\n\t\t\t<div id=\"otherButtonsContainer\">\n\t\t\t\t<div id='shuffle' onClick={()=>this.applyAlgorithm('shuffle')}>Shuffle</div><br/>\n\t\t\t\t<div id='instantShuffle' onClick={()=>this.applyAlgorithm('instantShuffle')}>Instant Shuffle</div><br/>\n\t\t\t\t<div onClick={()=>this.handleStop()}>Stop</div>\n\t\t\t</div>\n\t\t);\n\t\tconst sliderContainer = (\n\t\t\t<div id=\"sliderContainer\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\" \n\t\t\t\t\tmin=\"5\" max=\"128\" defaultValue=\"50\" \n\t\t\t\t\tname=\"barSlider\" id=\"barSlider\" \n\t\t\t\t\tonInput={() => this.handleNumBarsChange()} /><br/>\n\t\t\t\t<label htmlFor=\"barSlider\" id=\"barSliderDisplay\"># BARS: 50</label><br/><br/>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\" \n\t\t\t\t\tmin=\"10\" max=\"700\" defaultValue=\"100\" step=\"10\"\n\t\t\t\t\tname=\"speedSlider\" id=\"speedSlider\" onInput={() => this.handleSpeedChange()} /><br/>\n\t\t\t\t<label htmlFor=\"speedSlider\" id=\"speedSliderDisplay\">SPEED: 0.1 s</label><br/>\n\t\t\t</div>\n\t\t);\n\t\tconst bars = <Bar data={this.state.barArray} />;\n\t\tconst graph = <Plot data={this.state.runtimes} />;\n\t\tconst legend = <Legend />;\n\t\treturn (\n\t\t\t<div id=\"Bundle\">\n\t\t\t\t{menuBar}\n\t\t\t\t{otherButtons}\n\t\t\t\t{sliderContainer}\n\t\t\t\t{bars}\n\t\t\t\t{graph}\n\t\t\t\t{legend}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { Bundle };\n","export function bSort(arr:number[][]) {\n\tvar sequence = [];\n\tfor (let end = arr.length-1; end > 0; end--) {\n\t\tfor (let i = 0; i < end; i++) {\n\t\t\tif (arr[i][0] > arr[i+1][0]) {\n\t\t\t\tvar temp = arr[i];\n\t\t\t\tarr[i] = arr[i+1];\n\t\t\t\tarr[i+1] = temp;\n\t\t\t\tif (i === end-1) sequence.push([i,i+1,i+1]);\n\t\t\t\telse sequence.push([i,i+1]);\n\t\t\t}\n\t\t\tif (i === end-1) sequence.push([i+1,i+1,i+1]);\n\t\t}\n\t}\n\treturn sequence;\n}","export function iSort(arr:number[][]) {\n\tvar sequence = [];\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tvar toMove = arr[i];\n\t\tlet j = i-1;\n\t\twhile (j >= 0 && arr[j][0] > toMove[0]) {\n\t\t\tarr[j+1] = arr[j];\n\t\t\tarr[j] = toMove;\n\t\t\tsequence.push([j,j+1]);\n\t\t\tj--;\n\t\t}\n\t}\n\treturn sequence;\n}","export function fisher_yeats(arr:number[][]) {\n\tvar sequence = [];\n\tfor (let i = arr.length-1; i > 0; i--) {\n\t\tvar j = Math.floor(Math.random() * (i+1));\n\t\tvar temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\tsequence.push([i,j]);\n\t}\n\treturn sequence;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Bundle } from './components/Bundle'\n\n/* -------- RENDER -------- */\nReactDOM.render(<Bundle />, document.getElementById(\"root\"));\n"],"sourceRoot":""}