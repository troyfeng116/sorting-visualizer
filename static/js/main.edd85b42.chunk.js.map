{"version":3,"sources":["algorithms/shuffle.ts","algorithms/heapSort.ts","utility/constants.ts","algorithms/bubbleSort.ts","algorithms/insertionSort.ts","algorithms/quickSort.ts","algorithms/mergeSort.ts","utility/functions.ts","algorithms/sample.ts","components/Bar/Bar.tsx","components/Plot/Plot.tsx","components/Legend/Legend.tsx","components/Bundle.tsx","index.tsx"],"names":["fisher_yates","arr","sequence","i","length","j","Math","floor","random","temp","push","heapify","index","size","seq","maxIndex","lChild","rChild","algoStrings","algoFunctions","end","toMove","last","qSortAux","l","r","splitter","m","mSortAux","lIndex","rIndex","slice","merge","algoFullNames","algoTable","Map","makeArray","n","ans","sorted","getAlgoColor","algo","oneAlgoSample","min","max","step","results","newSeq","get","map","val","set","Bar","props","useEffect","data","d3","remove","append","attr","selectAll","enter","d","state","drawChart","Plot","React","memo","dataset","svg","height","text","xScale","domain","range","width","xAxis","yScale","yAxis","call","Legend","createLegendEntry","h","style","Bundle","numBars","barArray","currentlyRunning","speed","runtimes","parseInt","document","getElementById","value","innerHTML","this","setState","newSpeed","setColor","resetLast","setTimeout","reset","color","f","t","quickSort","k","handleSequence","numMoves","newRuntimes","backgroundColor","handleSequenceLoop","cur","upTo","swap","setOneBar","setActive","newArr","undefined","forEach","point","generateSample","menuButtons","Array","className","key","id","onClick","applyAlgorithm","getSample","otherButtons","handleStop","sliderContainer","type","defaultValue","name","onInput","handleNumBarsChange","htmlFor","handleSpeedChange","resetRuntimes","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.edd85b42.chunk.js","sourcesContent":["export function fisher_yates(arr:number[][]) {\n\tvar sequence = [];\n\tfor (let i = arr.length-1; i > 0; i--) {\n\t\tvar j = Math.floor(Math.random() * (i+1));\n\t\tvar temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\tsequence.push([i,j]);\n\t}\n\treturn sequence;\n}","export function hSort(arr:number[][]) {\n\tvar sequence: number[][] = [];\n\tvar size = arr.length;\n\tfor (let i = size-1; i >= 0; i--) {\n\t\theapify(arr,i,size,sequence);\n\t}\n\tfor (let last = size-1; last > 0; last--) {\n\t\tvar temp = arr[0];\n\t\tarr[0] = arr[last];\n\t\tarr[last] = temp;\n\t\tsequence.push([0,last,last]);\n\t\theapify(arr,0,last,sequence);\n\t}\n\treturn sequence;\n}\nfunction heapify(arr:number[][],index:number,size:number,seq:number[][]) {\n\tvar maxIndex = index;\n\tvar lChild = 2*index+1;\n\tvar rChild = 2*index+2;\n\tif (lChild < size && arr[lChild][0] > arr[maxIndex][0]) maxIndex = lChild;\n\tif (rChild < size && arr[rChild][0] > arr[maxIndex][0]) maxIndex = rChild;\n\tif (maxIndex !== index) {\n\t\tvar temp = arr[index];\n\t\tarr[index] = arr[maxIndex];\n\t\tarr[maxIndex] = temp;\n\t\tseq.push([index,maxIndex]);\n\t\theapify(arr,maxIndex,size,seq);\n\t}\n}","import { bSort } from './../algorithms/bubbleSort';\nimport { iSort } from './../algorithms/insertionSort';\nimport { hSort } from './../algorithms/heapSort';\nimport { qSort } from './../algorithms/quickSort';\nimport { mSort } from './../algorithms/mergeSort';\nimport { fisher_yates } from './../algorithms/shuffle';\n\nexport const NORMAL = 0;\nexport const ACTIVE = 1;\nexport const COMPARE = 2;\nexport const PIVOT = 3;\nexport const SORTED = 4;\nexport const DELAY = 100;\n\nexport const algoStrings = ['bSort', 'iSort', 'hSort', 'qSort', 'mSort', 'shuffle'];\nexport const algoFunctions = [bSort, iSort, hSort, qSort, mSort, fisher_yates];\nexport const algoFullNames = ['Bubble Sort', 'Insertion Sort', 'Heap Sort', 'Quick Sort', 'Merge Sort'];\nexport const algoTable = new Map();\nalgoStrings.map((val,index) => algoTable.set(val, index));\n","export function bSort(arr:number[][]) {\n\tvar sequence = [];\n\tfor (let end = arr.length-1; end > 0; end--) {\n\t\tfor (let i = 0; i < end; i++) {\n\t\t\tif (arr[i][0] > arr[i+1][0]) {\n\t\t\t\tvar temp = arr[i];\n\t\t\t\tarr[i] = arr[i+1];\n\t\t\t\tarr[i+1] = temp;\n\t\t\t\tif (i === end-1) sequence.push([i,i+1,i+1]);\n\t\t\t\telse sequence.push([i,i+1]);\n\t\t\t}\n\t\t\tif (i === end-1) sequence.push([i+1,i+1,i+1]);\n\t\t}\n\t}\n\treturn sequence;\n}","export function iSort(arr:number[][]) {\n\tvar sequence = [];\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tvar toMove = arr[i];\n\t\tlet j = i-1;\n\t\twhile (j >= 0 && arr[j][0] > toMove[0]) {\n\t\t\tarr[j+1] = arr[j];\n\t\t\tarr[j] = toMove;\n\t\t\tsequence.push([j,j+1]);\n\t\t\tj--;\n\t\t}\n\t}\n\treturn sequence;\n}","export function qSort(arr:number[][]) {\n\tvar sequence:number[][] = [];\n\tqSortAux(arr,0,arr.length-1,sequence);\n\treturn sequence;\n}\nfunction qSortAux(arr:number[][], l:number, r:number, sequence:number[][]) {\n\tif (l >= r) return;\n\tvar splitter = arr[r];\n\tvar m = l;\n\tfor (let i = l; i < r; i++) {\n\t\tif (arr[i][0] < splitter[0]) {\n\t\t\tlet temp = arr[i];\n\t\t\tarr[i] = arr[m];\n\t\t\tarr[m] = temp;\n\t\t\tsequence.push([i,m,l,r]);\n\t\t\tm++;\n\t\t}\n\t}\n\tarr[r] = arr[m];\n\tarr[m] = splitter;\n\tsequence.push([m,r,l,r]);\n\tqSortAux(arr,l,m-1,sequence);\n\tqSortAux(arr,m+1,r,sequence);\n}","export function mSort(arr:number[][]) {\n\tvar sequence:any[][] = [];\n\tmSortAux(arr,0,arr.length-1,sequence);\n\treturn sequence;\n}\nfunction mSortAux(arr:number[][],l:number,r:number,sequence:any[][]) {\n\tif (l >= r) return;\n\tvar m = Math.floor((l+r)/2);\n\tmSortAux(arr,l,m,sequence);\n\tmSortAux(arr,m+1,r,sequence);\n\tmerge(arr,l,r,sequence);\n}\nfunction merge(arr:number[][],l:number,r:number,sequence:any[][]) {\n\tvar m = Math.floor((l+r)/2);\n\tvar lIndex = l;\n\tvar rIndex = m+1;\n\twhile (lIndex <= m && rIndex <= r) {\n\t\tif (arr[lIndex][0] <= arr[rIndex][0]) {\n\t\t\tlIndex++;\n\t\t\tsequence.push([arr.slice(),l,r,lIndex,rIndex]);\n\t\t}\n\t\telse {\n\t\t\tvar temp = arr[rIndex];\n\t\t\tvar i = rIndex;\n\t\t\twhile (i !== lIndex) {\n\t\t\t\tarr[i] = arr[i-1];\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tarr[lIndex] = temp;\n\t\t\tlIndex++;\n\t\t\tm++;\n\t\t\trIndex++;\n\t\t\tif (rIndex <= r) sequence.push([arr.slice(),l,r,lIndex,rIndex]);\n\t\t\telse sequence.push([arr.slice(),l,r,lIndex,rIndex-1]);\n\t\t}\n\t}\n}","import { NORMAL, ACTIVE, COMPARE, PIVOT } from './constants';\n\nexport function makeArray(n:number) {\n\tvar ans:number[][] = [];\n\tfor (let i = 1; i <= n; i++) ans.push([i,NORMAL]);\n\treturn ans;\n}\nexport function getColor(state:number) {\n\treturn state===NORMAL?\n\t\t\"rgb(60,60,120)\" : state===ACTIVE?\n\t\t\t\"rgb(100,100,255)\" : state===COMPARE?\n\t\t\t\t\"red\" : state===PIVOT?\n\t\t\t\t\t\"blue\" : \"rgb(80,210,80)\";\n}\nexport function sorted(arr:number[][]) {\n\tfor (let i = 0; i < arr.length-1; i++) {\n\t\tif (arr[i][0] > arr[i+1][0]) return false;\n\t}\n\treturn true;\n}\n\nexport function getAlgoColor(algo:string) {\n\tswitch (algo) {\n\t\tcase 'bSort': return \"rgb(255,0,0)\";\n\t\tcase 'iSort': return \"rgb(0,220,0)\";\n\t\tcase 'hSort': return \"rgb(0,150,255)\";\n\t\tcase 'qSort': return \"rgb(255,120,0)\";\n\t\tcase 'mSort': return \"rgb(220,0,220)\";\n\t\tcase 'shuffle': return \"rgb(15,15,15)\";\n\t}\n\treturn \"black\";\n}","import { algoStrings, algoFunctions, algoTable } from './../utility/constants';\nimport { makeArray } from './../utility/functions';\nimport { fisher_yates } from './shuffle';\n\nexport function generateSample(algo:string) {\n\tvar results:any[][] = [];\n\tvar index = algoTable.get(algo);\n\tif (index !== undefined) {\n\t\tlet seq = oneAlgoSample(algo, 5, 128, -1);\n\t\tseq.forEach((point) => results.push(point));\n\t}\n\telse {\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tlet seq = oneAlgoSample(algoStrings[i], 10, 120, 10);\n\t\t\tseq.forEach((point) => results.push(point));\n\t\t}\n\t}\n\treturn results;\n}\n\nfunction oneAlgoSample(algo:string, min:number, max:number, step:number) {\n\tvar results:any[][] = [];\n\tfor (let n = min; n <= max; n += step<0? Math.floor(Math.random()*5)+3 : step) {\n\t\tvar arr = makeArray(n);\n\t\tfisher_yates(arr);\n\t\tvar newSeq = algoFunctions[algoTable.get(algo)](arr);\n\t\tresults.push([n, newSeq.length, algo]);\n\t}\n\treturn results;\n}\n","import './Bar.css'\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getColor } from '../../utility/functions';\n\nconst  Bar = (props: {data:any[][]}) => {\n    useEffect(() => drawChart(), [props.data]);\n    function drawChart() {\n    \tconst data = props.data;\n    \td3.select(\"#barContainer\").remove();\n    \tconst svg = d3.select(\".bar-container\").append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").attr(\"id\",\"barContainer\");\n    \tsvg.selectAll(\"rect\")\n  \t\t\t.data(data)\n  \t\t\t.enter()\n  \t\t\t.append(\"rect\")\n  \t\t\t.attr(\"x\", (d, i) => (i*100/data.length)+\"%\")\n  \t\t\t.attr(\"y\", (d, i) => (100 - 100/data.length*d[0])+\"%\")\n  \t\t\t.attr(\"width\", (55/data.length)+\"%\")\n  \t\t\t.attr(\"height\", (d, i) => 100/data.length*d[0]+\"%\")\n  \t\t\t.attr(\"fill\", (d, i) => getColor(d[1]));\n    }\n    return <></>;\n}\n\nexport { Bar };","import './Plot.css'\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getAlgoColor } from '../../utility/functions'\n\nconst Plot = React.memo((props: {data: any[][]}) => {\n\tuseEffect(() => drawChart()/*, [data]*/);\n\tfunction drawChart() {\n\t\tconst dataset = props.data;\n\t\td3.select(\"#chart\").remove();\n\t\tconst numPoints = 130;\n\t\tconst maxRuntime = 5000;\n\t\tconst height = 375;\n\t\tconst width = 400;\n\t\tvar svg = d3.select(\".plot-container\").append(\"svg\").attr(\"width\",width).attr(\"height\",height).attr(\"id\",\"chart\");\n\t\tsvg.selectAll(\"circle\")\n\t\t\t.data(dataset)\n\t\t\t.enter()\n\t\t\t.append(\"svg:circle\")\n\t\t\t.attr(\"cx\", (d) => (d[0]/numPoints*(width-100)))\n\t\t\t.attr(\"transform\", \"translate(50,\"+(height+10)+\")\")\n\t\t\t.attr(\"cy\", (d) => (height*.9- d[1]/maxRuntime*(height*.9)))\n\t\t\t.attr(\"transform\", \"translate(50,10)\")\n\t\t\t.attr(\"r\", 4)\n\t\t\t.attr(\"fill\", (d) => getAlgoColor(d[2]))\n\t\t\t.append(\"svg:title\")\n   \t\t\t\t.text((d) => d[2] + \": (\" + d[0] + \",\" + d[1] + \")\");\n   \t\t/* Axes */\n\t\tvar xScale = d3.scaleLinear()\n\t\t\t.domain([0,numPoints])\n\t\t\t.range([0, width-100]);\n\t\tvar xAxis = d3.axisBottom(xScale);\n\t\tvar yScale = d3.scaleLinear()\n\t\t\t.domain([0,maxRuntime])\n\t\t\t.range([height*.9,0]);\n\t\tvar yAxis = d3.axisLeft(yScale);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(50,10)\")\n\t\t\t.call(yAxis);\n\t\tsvg.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(50,\"+(height*.9+10)+\")\")\n\t\t\t.call(xAxis);\n\t\tsvg.append(\"text\")\n\t\t\t.attr(\"class\", \"x label\")\n\t\t\t.attr(\"text-anchor\", \"end\")\n    \t\t.attr(\"x\", width)\n    \t\t.attr(\"y\",height-30)\n    \t\t.text(\"# bars\");\n    \tsvg.append(\"text\")\n    \t\t.attr(\"class\", \"y label\")\n\t\t\t.attr(\"text-anchor\", \"end\")\n\t\t\t.attr(\"y\",10)\n    \t\t.attr(\"transform\", \"rotate(-90)\")\n    \t\t.text(\"# compares\");\n\t}\n\treturn <></>;\n});\n\nexport { Plot };\n","import './Legend.css'\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { getAlgoColor } from '../../utility/functions';\n\nconst Legend = () => {\n\tuseEffect(() => drawChart(), []);\n\tfunction drawChart() {\n\t\td3.select(\"#legend\").remove();\n\t\tlet svg = d3.select(\".legend-container\").append(\"svg\").attr(\"width\", 100).attr(\"height\",120).attr(\"id\",\"legend\");\n\t\tcreateLegendEntry(svg, 10, 'bSort');\n\t\tcreateLegendEntry(svg, 30, 'iSort');\n\t\tcreateLegendEntry(svg, 50, 'hSort');\n\t\tcreateLegendEntry(svg, 70, 'qSort');\n\t\tcreateLegendEntry(svg, 90, 'mSort');\n\t\tcreateLegendEntry(svg, 110, 'shuffle');\n\t}\n\treturn <></>;\n}\n\nfunction createLegendEntry(svg:d3.Selection<SVGSVGElement,unknown,HTMLElement,any>, h:number, algo:string) {\n\tsvg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",h).attr(\"r\", 6).style(\"fill\", getAlgoColor(algo));\n\tsvg.append(\"text\").attr(\"x\", 20).attr(\"y\", h).text(algo).attr(\"alignment-baseline\",\"middle\");\n}\n\nexport { Legend };","import './Bundle.css'\nimport React from 'react';\n\n/* -------- ALGORITHMS -------- */\nimport { fisher_yates } from './../algorithms/shuffle';\nimport { generateSample } from './../algorithms/sample';\n\n/* -------- CONSTANTS & UTILITIES -------- */\nimport { NORMAL, ACTIVE, COMPARE, PIVOT, SORTED, DELAY } from './../utility/constants';\nimport { algoStrings, algoFunctions, algoFullNames, algoTable } from './../utility/constants';\nimport { makeArray, sorted, getAlgoColor } from './../utility/functions';\n\n/* -------- COMPONENTS -------- */\nimport { Bar } from './Bar/Bar';\nimport { Plot } from './Plot/Plot';\nimport { Legend } from './Legend/Legend';\n\ntype BundleState = {\n\tnumBars:number,\n\tbarArray:number[][],\n\tcurrentlyRunning:boolean,\n\tspeed:number,\n\truntimes:any[]\n}\n\nclass Bundle extends React.Component {\n\tpublic state:BundleState = {\n\t\tnumBars: 50,\n\t\tbarArray: makeArray(50),\n\t\tcurrentlyRunning: false,\n\t\tspeed: 100,\n\t\truntimes: []\n\t}\n\thandleNumBarsChange() {\n\t\tvar n:number = parseInt((document.getElementById('barSlider') as HTMLInputElement).value);\n\t\t(document.getElementById(\"barSliderDisplay\") as HTMLLabelElement).innerHTML = \"# Bars: \"+n;\n\t\tthis.setState({\n\t\t\tnumBars: n,\n\t\t\tbarArray: makeArray(n),\n\t\t\tcurrentlyRunning: false,\n\t\t});\n\t}\n\thandleSpeedChange() {\n\t\tvar newSpeed = parseInt((document.getElementById(\"speedSlider\") as HTMLInputElement).value);\n\t\t(document.getElementById(\"speedSliderDisplay\") as HTMLLabelElement).innerHTML = \"Speed: \"+(newSpeed/1000)+\"s\";\n\t\tthis.setState({speed: newSpeed});\n\t}\n\thandleStop() {\n\t\tthis.setState({currentlyRunning: false,});\n\t\tthis.setColor(NORMAL);\n\t}\n\treset(i:number) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tif (i >= arr.length) return;\n\t\tarr[i][1] = NORMAL;\n\t\tthis.setState({barArray: arr});\n\t}\n\tswap(i:number,j:number,resetLast:boolean) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tvar temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t\tarr[i][1] = COMPARE;\n\t\tarr[j][1] = COMPARE;\n\t\tthis.setState({barArray: arr});\n\t\tif (resetLast) setTimeout(()=>{this.reset(i); this.reset(j)}, this.state.speed);\n\t\telse if (i !== j) setTimeout(()=>{this.reset(i)}, this.state.speed);\n\t}\n\tsetOneBar(index:number,color:number) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tarr[index][1] = color;\n\t\tthis.setState({barArray: arr});\n\t}\n\tsetColor(color:number) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tfor (let i = 0; i < arr.length; i++) arr[i][1] = color;\n\t\tthis.setState({barArray: arr});\n\t}\n\tsetActive(f:number,t:number,quickSort:boolean) {\n\t\tvar arr = this.state.barArray.slice();\n\t\tfor (let k = 0; k < arr.length; k++) arr[k][1] = NORMAL;\n\t\tfor (let k = f; k <= t; k++) arr[k][1] = ACTIVE;\n\t\tif (quickSort) arr[t][1] = PIVOT;\n\t\tthis.setState({barArray:arr});\n\t}\n\tapplyAlgorithm(algo: string) {\n\t\tif (this.state.currentlyRunning) return;\n\t\tvar arr = this.state.barArray.slice();\n\t\tif (algo === 'instantShuffle' || algo === 'shuffle') {\n\t\t\tthis.setColor(NORMAL);\n\t\t\tvar seq = fisher_yates(arr);\n\t\t\tif (algo === 'shuffle') this.handleSequence(seq, 'shuffle');\n\t\t\telse this.setState({barArray:arr});\n\t\t\treturn;\n\t\t}\n\t\tif (sorted(arr)) {\n\t\t\tthis.setColor(SORTED);\n\t\t\treturn;\n\t\t}\n\t\tthis.handleSequence(algoFunctions[algoTable.get(algo)](arr),algo);\n\t}\n\thandleSequence(seq:number[][], algo:string) {\n\t\tvar numMoves = seq.length;\n\t\tvar newRuntimes = this.state.runtimes.slice();\n\t\tnewRuntimes.push([this.state.numBars, numMoves, algo]);\n\t\tthis.setState({runtimes: newRuntimes});\n\t\t(document.getElementById(algo) as HTMLDivElement).style.backgroundColor = getAlgoColor(algo);\n\t\t(document.getElementById(algo) as HTMLDivElement).style.color = \"white\";\n\t\tthis.setState({currentlyRunning: true});\n\t\tsetTimeout(()=>this.handleSequenceLoop(0,numMoves,seq,algo),DELAY);\n\t}\n\thandleSequenceLoop(cur:number,upTo:number,seq:any[][],algo:string) {\n\t\tif (!this.state.currentlyRunning) {\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.backgroundColor = \"\";\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.color = \"\";\n\t\t\treturn;\n\t\t}\n\t\tif (cur >= upTo) {\n\t\t\tthis.setState({currentlyRunning: false});\n\t\t\tif (sorted(this.state.barArray)) setTimeout(()=>this.setColor(SORTED), this.state.speed);\n\t\t\telse setTimeout(()=>this.setColor(NORMAL), this.state.speed);\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.backgroundColor = \"\";\n\t\t\t(document.getElementById(algo) as HTMLDivElement).style.color = \"\";\n\t\t\treturn;\n\t\t}\n\t\tif (seq[cur].length === 2) {\n\t\t\tthis.swap(seq[cur][0] as number, seq[cur][1] as number, true);\n\t\t}\n\t\telse if (seq[cur].length === 3) {\n\t\t\tthis.swap(seq[cur][0] as number, seq[cur][1] as number, false);\n\t\t\tthis.setOneBar(seq[cur][2] as number,SORTED);\n\t\t}\n\t\telse if (seq[cur].length === 4) {\n\t\t\tthis.setActive(seq[cur][2] as number,seq[cur][3] as number, true);\n\t\t\tthis.swap(seq[cur][0] as number, seq[cur][1] as number, true);\n\t\t}\n\t\telse if (seq[cur].length === 5) {\n\t\t\tthis.setActive(seq[cur][1] as number, seq[cur][2] as number, false);\n\t\t\tvar newArr = seq[cur][0];\n\t\t\tnewArr[seq[cur][3]][1] = COMPARE;\n\t\t\tnewArr[seq[cur][4]][1] = COMPARE;\n\t\t\tthis.setState({barArray: newArr});\n\t\t}\n\t\tsetTimeout(()=>this.handleSequenceLoop(cur+1,upTo,seq,algo), this.state.speed);\n\t}\n\tgetSample(algo:string) {\n\t\tif (this.state.currentlyRunning) return;\n\t\tvar arr = this.state.runtimes.slice();\n\t\tvar toAppend = generateSample(algo);\n\t\ttoAppend.forEach((point) => arr.push(point));\n\t\tthis.setState({runtimes: arr});\n\t}\n\tresetRuntimes() {\n\t\tif (!this.state.currentlyRunning) this.setState({runtimes:[]});\n\t}\n\trender() {\n\t\tconst menuButtons = new Array(5);\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tmenuButtons[i] = (\n\t\t\t\t<div className='menubar-cell' key={i}>\n\t\t\t\t\t<div className='menubar-cell-top' id={algoStrings[i]} onClick={()=>this.applyAlgorithm(algoStrings[i])}>\n\t\t\t\t\t\t{algoFullNames[i]}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='menubar-cell-bottom' onClick={()=>this.getSample(algoStrings[i])}>\n\t\t\t\t\t\tSample\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\tconst otherButtons = (\n\t\t\t<div id=\"otherButtonsContainer\">\n\t\t\t\t<div className='other-button' id='shuffle' onClick={()=>this.applyAlgorithm('shuffle')}>Shuffle</div><br/>\n\t\t\t\t<div className='other-button' id='instantShuffle' onClick={()=>this.applyAlgorithm('instantShuffle')}>Instant Shuffle</div><br/>\n\t\t\t\t<div className='other-button' onClick={()=>this.handleStop()}>Stop</div>\n\t\t\t</div>\n\t\t);\n\t\tconst sliderContainer = (\n\t\t\t<div id=\"sliderContainer\">\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\" \n\t\t\t\t\tmin=\"5\" max=\"128\" defaultValue=\"50\" \n\t\t\t\t\tname=\"barSlider\" id=\"barSlider\" \n\t\t\t\t\tonInput={() => this.handleNumBarsChange()} /><br/>\n\t\t\t\t<label htmlFor=\"barSlider\" id=\"barSliderDisplay\"># Bars: 50</label><br/><br/>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\" \n\t\t\t\t\tmin=\"10\" max=\"700\" defaultValue=\"100\" step=\"10\"\n\t\t\t\t\tname=\"speedSlider\" id=\"speedSlider\" onInput={() => this.handleSpeedChange()} /><br/>\n\t\t\t\t<label htmlFor=\"speedSlider\" id=\"speedSliderDisplay\">\n\t\t\t\t\tSpeed: {this.state.speed/1000}s\n\t\t\t\t</label><br/>\n\t\t\t</div>\n\t\t);\n\t\treturn (\n\t\t\t<div id=\"Bundle\">\n\t\t\t\t<div className='bundle-top'>\n\t\t\t\t\t<div id=\"menuBar\">{menuButtons}</div>\n\t\t\t\t\t<div className='other-buttons-super-container'>{otherButtons}</div>\n\t\t\t\t\t<div className='slider-super-container'>{sliderContainer}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='bundle-bottom'>\n\t\t\t\t\t<div className='bar-container'><Bar data={this.state.barArray} /></div>\n\t\t\t\t\t<div className='bundle-bottom-right'>\n\t\t\t\t\t\t<div className='plot-container'><Plot data={this.state.runtimes} /></div>\n\t\t\t\t\t\t<div className=\"legend-container\">\n\t\t\t\t\t\t\t<div className='legend-button-container'>\n\t\t\t\t\t\t\t\t<div className='legend-button' id=\"sampleButton\" onClick={() => this.getSample('all')}>Sample</div>\n\t\t\t\t\t\t\t\t<div className='legend-button' id=\"resetButton\" onClick={() => this.resetRuntimes()}>Reset</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Legend />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { Bundle };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Bundle } from './components/Bundle'\n\n/* -------- RENDER -------- */\nReactDOM.render(<Bundle />, document.getElementById(\"root\"));\n"],"sourceRoot":""}